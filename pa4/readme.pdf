---------------
Design Decision
---------------

For this assignment we needed to create two seperate caches that used different bits
of the binary address for the index and tag. I created my cache structure, with a rank, 
to be used for the replacement policy, a tag to represent the tag bits and a valid to
determine if the line has been accessed. I decided to create a 2D array of my cache structure,
with the rows representing the number of sets and the columns representing the number of lines
in each set. Using this I was easily able to access each element of the cache without having to keep
track of how many nodes were at each set, which was my initial idea when I thought of using a linked list
to represent the lines. 

--------
Analysis
--------

After taking a look at the respective hits and misses for each cache, I believe cache A is better suited 
because it has more hits and less misses than cache B for the trace files. The reason for this is that 
since we zero extend the memory address at the beginning, taking the index bits from the beginning of the
binary will give the same index for more addresses than taking the index bits from the middle in cache A.
As a result of this there will be more "collisions" at a particular index and thus, lead to more tag bits
being overwritten. This then gives you more misses than hits. 
